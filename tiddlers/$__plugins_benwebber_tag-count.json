{"tiddlers":{"$:/plugins/benwebber/tag-count/README":{"title":"$:/plugins/benwebber/tag-count/README","text":"''tag-count'' adds a count to tag pills.\n\n!! Example\n\n<<tag \"$:/tags/Stylesheet\">>\n"},"$:/plugins/benwebber/tag-count/modules/indexers/tag-count.min.js":{"text":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.TagCountIndexer=void 0;class TagCountIndexer{constructor(wiki){this.index={};this.cacheTiddler=\"$:/temp/plugins/benwebber/tag-count/cache\";this.ignoreUpdatesForTitles=[\"$:/StoryList\",\"$:/HistoryList\"];this.wiki=wiki}init(){}rebuild(){this.index=this.getTagCounts()}update(updateDescriptor){const shouldUpdate=this.shouldUpdate(updateDescriptor);if(!shouldUpdate){return}const tagCounts=this.getTagCounts();const hasChanged=this.hasChanged(tagCounts);if(!hasChanged){return}this.index=tagCounts;this.wiki.addTiddler({title:this.cacheTiddler,text:JSON.stringify(this.index),type:\"application/json\"})}getTagCounts(){const indexer=this.wiki.getIndexer(\"TagIndexer\").subIndexers[3];indexer.lookup();return Object.fromEntries(Object.entries(indexer.index).map((([tag,tagged])=>[tag,tagged.titles.length])))}hasChanged(tagCounts){for(const tag in tagCounts){if(tagCounts[tag]!==this.index[tag]){return true}}return false}shouldUpdate(updateDescriptor){const oldTiddler=updateDescriptor.old.tiddler;const newTiddler=updateDescriptor.new.tiddler;if(oldTiddler&&oldTiddler.fields.title===this.cacheTiddler||newTiddler&&newTiddler.fields.title===this.cacheTiddler||newTiddler&&this.ignoreUpdatesForTitles.includes(newTiddler.fields.title)||newTiddler&&newTiddler.fields[\"draft.of\"]){return false}return true}}exports.TagCountIndexer=TagCountIndexer;","title":"$:/plugins/benwebber/tag-count/modules/indexers/tag-count.min.js","type":"application/javascript","module-type":"indexer"},"$:/plugins/benwebber/tag-count/styles":{"title":"$:/plugins/benwebber/tag-count/styles","tags":"$:/tags/Stylesheet","text":"\\whitespace trim\n\n.tc-tag-label:after {\n  font-size: 0.8em;\n  opacity: calc(2/3);\n  vertical-align: middle;\n  margin-left: 0.25em;\n}\n\n{{$:/temp/plugins/benwebber/tag-count/cache||$:/plugins/benwebber/tag-count/templates/rules}}\n\n.tc-untagged-label:after {\n  content: \"<$count filter=\"[untagged[]!is[system]] -[tags[]]\"/>\";\n}\n"},"$:/plugins/benwebber/tag-count/templates/rules":{"title":"$:/plugins/benwebber/tag-count/templates/rules","text":"<$list filter=\"[all[current]indexes[]]\" variable=tag>\n[data-tag-title={{{ [<tag>escapecss[]] }}}] .tc-tag-label:after{content:\"{{{ [all[current]getindex<tag>] }}}\";}\n</$list>\n"}}}