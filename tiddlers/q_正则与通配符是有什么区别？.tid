created: 20240222153401978
modified: 20240222153621964
tags: .
title: q:正则与通配符是有什么区别？

q:如何用正则匹配大括号？
:\d00|[a-z]00:|关于.* \{\{\{

a:在Mixplorer中尝试匹配“关于什么什么的 {{{3”，这里面牵涉到大括号的转义，按搜索引擎给出的说法(如下)，前面加斜杠是对的，如\{\{\{。但最初不起作用，最后问题终止在关于*，中间漏了个. 。点是代表任意字符，而*则是重复任意次。这是与通配符？不一样的地方。

*:通配符,代表任意字符,0到多个  ?:通配符,代表一个字符

正则表达式中匹配大括号，可以使用转义字符 '' 进行转义。例如，如果要匹配单个左大括号 '{'，可以使用 '{'，如果要匹配单个右大括号 '}'，可以使用 '}'。如果要匹配一对大括号，可以使用 '{}'。

注意：在某些语言中，正则表达式的转义字符可能是 '\' 而不是 ''，例如在 Python 中就是这样。所以在使用正则表达式时，请务必先确认正则表达式的转义字符是什么。


q:正则与通配符是有什么区别？

通配符常见为星号与问号，*表示任意字符，0到多个，与正则里面基本相同；但？表示一个字符，这在正则中是直接用一个点.来完成。

也就是说，在正则表达式中，*的作用体现为贪婪的匹配万式

*表示可以匹配前面的子表达式任意次。比如，abc*可以匹配"a"，"ab"，"c"，"abc"，"abccc"等等，只要含有*前面的任意子表达式的字符串都能与其匹配。

那点.表示任意单个字符，.*点与星号连在一起就是重复多次直至遇到中括号,达到目的。

附20个常见通配符（来源网上）

1、*：通配符，代表任意字符，0到多个

2、？：通配符，代表一个字符

3、

4、\：转义符号，将特殊字符或通配符还原成一般符号

5、|：分割两个管线命令的界定

6、；：连续性命令的界定

7、~：用户的根目录

8、$：变量前需要加的变量值

9、！：逻辑运算中的“非”

10、/：路径分割符号

11、>：输出导向，“取代”

12、>>：输出导向，“累加”

13、'：不具有变量置换功能

14、"：具有变量置换功能

15、`：quote符号，两个`中间为可以先执行的指令

16、()：中间为子shell的起始与结束

17、：中间为字符组合

18、{}：中间为命令区块组合

19、&&：当该符号前一个指令执行成功时，执行后一个指令

20、||：当该符号前一个指令执行失败时，执行后一个指令


